import com.diffplug.gradle.pde.*
import com.diffplug.gradle.p2.*
import com.diffplug.gradle.FileMisc
import com.diffplug.common.swt.os.SwtPlatform

////////////////////////////////////////////////
// Build our application into a P2 repository //
////////////////////////////////////////////////

def P2_DIR = 'build/p2'

task buildP2(type: PdeBuildTask) {
	// set the base platform
	base(rootProject.file('target.fromp2/build/p2asmaven/p2runnable'))
	// configure where the projects will come from
	addPluginPath(rootProject.file('target.frommaven/build'))
	// and where they will go
	destination(P2_DIR)
	// specify that this is a product build
	product {
		id 'com.diffplug.rcpdemo.product'
		version rootProject.version
		productPluginDir rootProject.file('com.diffplug.rcpdemo')
		productFileWithinPlugin 'rcpdemo.product'
		explicitVersionPolicy({
			it.resolve('com.google.guava', '17.0.0', '18.0.0').with('17.0.0', '18.0.0')
		})
	}
	// set the build properties to be appropriate for p2
	props['p2.build.repo'] = 'file://' + project.file(P2_DIR).absolutePath
	props['p2.gathering'] =	'true'
	props['p2.compress'] =	'true'
	props['skipDirector'] =	'true'
	props['runPackager'] = 'false'
	props['groupConfigurations'] = 'true'
}

P2Model model = new P2Model()
model.addRepo(project.file(P2_DIR))
model.addIU('com.diffplug.rcpdemo.product')

def createTask(SwtPlatform platform, P2Model model) {
	def assembleTask = project.task('assemble.' + platform)
	assembleTask.doLast {
		def dest = project.file('build/' + platform + (platform.os == 'macosx' ? '.app' : ''))
		FileMisc.cleanDir(dest)
		P2Model.DirectorApp director = model.directorApp(dest, 'RcpDemo')
		director.roaming()
		director.platform(platform)
		director.runUsingBootstrapper(project)
	}
	return assembleTask
}
def assembleAll = project.task('assemble.all')
for (SwtPlatform platform : SwtPlatform.getAll()) {
	def assemble = createTask(platform, model)
	assembleAll.dependsOn(assemble)
	assemble.dependsOn(buildP2)
}
